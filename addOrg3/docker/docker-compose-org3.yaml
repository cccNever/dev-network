version: '3.7'

volumes:
  peer1.org3.example.com:


networks:
  test:
    external:
      name: dev

services:
  peer1.org3.example.com:
    container_name: peer1.org3.example.com
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dev
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp ##Peer节点的本地MSP配置文件的路径。
      - CORE_PEER_GOSSIP_USELEADERELECTION=true ##节点是否使用动态算法选出主导节点，该主导节点将连接 排序服务并使用分发协议从排序服务拉取账本区块。对大型网络建议启用主导节点选举。
      - CORE_PEER_GOSSIP_ORGLEADER=false ##是否静态指定机构的主导节点，该节点将负责维持与排序节点 的连接并向机构中的其他节点分发区块。
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/tlscacerts/tls-0-0-0-0-7052-tls-ca-node1.pem
      # Peer specific variables
      - CORE_PEER_ID=peer1.org3.example.com
      - CORE_PEER_ADDRESS=peer1.org3.example.com:7158 ##同一机构中其他Peer节点要连接此节点需指定的P2P连接地址。 要设置跨机构的P2P连接地址，请使用CORE_PEER_GOSSIP_EXTERNAENDPOINT。
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7158 ##设置或读取peer节点的监听地址。默认情况下Peer节点在所有 地址上监听请求。
      - CORE_PEER_CHAINCODEADDRESS=peer1.org3.example.com:7258 ##链码连接该Peer节点的地址。
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7258 ##Peer节点监听链码连接请求的地址。如果未设置该参数，将自动选择节点地址的7052端口。
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org3.example.com:7158 ##设置初始化gossip的引导节点列表，节点启动时将连接 这些引导节点。
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org3.example.com:7158 ##向机构外的节点发布的访问端结点。如果未设置该参数，节点 将不为其他机构所知。
      - CORE_PEER_LOCALMSPID=Org3MSP
      - GODEBUG=netdns=go
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ../../organizations/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/msp:/etc/hyperledger/fabric/msp
        - ../../organizations/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/tls-msp:/etc/hyperledger/fabric/tls
        - peer1.org3.example.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org3/peer1
    command: peer node start
    ports:
      - 7158:7158
    networks:
      - test

  cli-node3:
    container_name: cli-node3
    image: hyperledger/fabric-tools:latest
    labels:
      service: hyperledger-fabric
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - GODEBUG=netdns=go
      #- FABRIC_LOGGING_SPEC=DEBUG
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: /bin/bash
    volumes:
      - ../../:/opt/gopath/src/github.com/hyperledger/fabric
    depends_on:
      - peer1.org3.example.com
    networks:
      - test